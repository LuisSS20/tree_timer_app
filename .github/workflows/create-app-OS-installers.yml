name: Creation of OS installers
env:
  INNO_VERSION: 6.2.1

run-name: Creation of OS installers
on: [push]
jobs:
  Create-Windows-Installer:
    runs-on: windows-latest
    steps:
      - run: echo "The branch where this action it is running is ${{ github.ref }}."
      
      - name: Check out repository code
        uses: actions/checkout@v3.3.0
        
      - run: echo "The branch where this action it is running is ${{ github.ref }}."
      
      - name: Downloading Inno Setup installer
        run: curl -L -o inno_installer.exe http://files.jrsoftware.org/is/6/innosetup-${{ env.INNO_VERSION }}.exe
        
      - name: Running Inno Setup installer
        run: ./inno_installer.exe /verysilent /norestart /allusers /dir=installaters
        
      - name: Getting Flutter action
        uses: subosito/flutter-action@v2.8.0
        
      - name: Checking if Flutter it is installed
        run: flutter --version
        
      - name: List directory
        run: dir
        
      - name: Adding Windows support to flutter project
        run: flutter config --enable-windows-desktop
        
      - name: Adding support to Windows platform
        run: flutter create --platform=windows .
        
      - name: Build windows app with flutter
        run: flutter build windows
        
      - name: Create Windows Installer
        run: iscc installers_scripts/windowsScript.iss
        
      - name: Commit and push changes
        run: |
          git config --global user.name "LuisSS20"
          git config --global user.email "luissoriano@correo.ugr.es"

          git add installers/TreeTimerAppWindowsInstaller.exe
          git commit -m "Add new windows installer"
          git push
        
      - name:  Upload a Build Artifact with the windows installer compiled
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Installers
          path: installers/

  Create-Linux-Installer:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The branch where this action it is running is ${{ github.ref }}."
      
      - name: Check out repository code
        uses: actions/checkout@v3.3.0
        
      - run: echo "The branch where this action it is running is ${{ github.ref }}."
      
      - name: Getting Flutter action
        uses: subosito/flutter-action@v2.8.0
        
      - name: Checking if Flutter it is installed
        run: flutter --version
        
      - name: List directory
        run: ls

      - name: Update linux repos
        run: sudo apt-get update  

      - name: Installing libraries that are necessaries
        run: sudo apt-get install -y clang cmake ninja-build libgtk-3-dev libblkid1 liblzma5

      - name: Adding Linux support to flutter project
        run: flutter config --enable-linux-desktop
        
      - name: Adding support to Linux
        run: flutter create --platform=linux .
        
      - name: Build linux app with flutter
        run: flutter build linux

      - name: List all files from build/linux
        run: ls -R build/linux

      - name: Preparing linux installer files
        run: |
          mkdir config_files
          cp -r build/linux/x64/release/bundle/* config_files
          tar -cvf payload.tar -C config_files/ .

          mkdir config_stage
          cp payload.tar config_stage/

          touch config_stage/install.sh
          chmod +x config_stage/install.sh
          echo -e "#!/bin/bash\n\ntar -xvf ./payload.tar -C "$HOME" && echo 'Config files extracted successfully!'"
          cat config_stage/install.sh

      - name: Create linux installer
        run: |
          sudo apt-get install -y makeself
          makeself --sha256 --target /installers ./config_stage  TreeTimerAppLinuxInstaller.run "Flutter App installer for Linux" ./install.sh

      - name: Checking
        run: |
          ls
      - name: Checking2
        run: |
          ls installers/

      # - name: Commit and push changes
      #   run: |
      #     git config --global user.name "LuisSS20"
      #     git config --global user.email "luissoriano@correo.ugr.es"

      #     git add build/linux/x64/release/bundle/*
      #     git commit -m "Add new linux app"
      #     git push

